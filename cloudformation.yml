AWSTemplateFormatVersion: 2010-09-09
Description: AWS Email Spam Detection
Parameters:
  EndPointName:
    Type: String
Resources:
  S3BucketStoringEmailCloudFormation:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: emailspamci
    DeletionPolicy: Retain
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: '*'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3BucketStoringEmailCloudFormation
                - /*
            Condition:
              StringEquals:
                'aws:Referer':
                  - '779985213601'
                'AWS:SourceArn':
                  - 'arn:aws:ses:us-east-1:779985213601:receipt-rule-set/spamRuleSetCloud:receipt-rule/RN1_Cloud'
      Bucket: !Ref S3BucketStoringEmailCloudFormation
  ProcessingLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref LambdaFunctionEmail
      Principal: s3.amazonaws.com
      SourceArn: 'arn:aws:s3:::emailspamci'
      SourceAccount: '779985213601'
  LambdaCLoudFormation:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: lambdacloudformation-role
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: getObjects
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - s3:GetObject
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3BucketStoringEmailCloudFormation
                  - /*
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
        - arn:aws:iam::aws:policy/CloudWatchEventsFullAccess
      Path: /
  LambdaFunctionEmail:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: lambdastoragecloudformation
        S3Key: lambda_function.zip
      Description: lambda function for email
      Environment:
        Variables:
          ENDPOINT_NAME: !Ref EndPointName
      FunctionName: lambdacloudformation
      Handler: lambda_function.lambda_handler
      MemorySize: 512
      Role:
       Fn::GetAtt:
          - LambdaCLoudFormation
          - Arn
      Runtime: python3.7
      Timeout: 60
      Layers:
        - 'arn:aws:lambda:us-east-1:113088814899:layer:Klayers-python37-numpy:10'
  SesRuleSet:
    Type: 'AWS::SES::ReceiptRuleSet'
    Properties:
      RuleSetName: 'spamRuleSetCloud'
  SesRule:
    Type: 'AWS::SES::ReceiptRule'
    Properties:
      Rule:
        Name: 'RN1_Cloud'
        Actions:
          - S3Action:
              BucketName: !Ref S3BucketStoringEmailCloudFormation
        Enabled: true
        Recipients:
          - 'awsspamdetector.ml'
        ScanEnabled: false
      RuleSetName: !Ref SesRuleSet